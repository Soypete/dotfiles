set nocompatible  
set spelllang=en
set spell
syntax enable
filetype plugin indent on
set tabstop=4
set shiftwidth=4
set number

" vim plug"""
call plug#begin('~/.vim/plugged')

Plug 'buoto/gotests-vim'
Plug 'ekalinin/dockerfile.vim'
Plug 'fatih/vim-go'
Plug 'jremmen/vim-ripgrep'
Plug 'junegunn/seoul256.vim'
Plug 'junegunn/vim-easy-align'
Plug 'liuchengxu/space-vim-dark'
Plug 'luochen1990/rainbow'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-commentary'
Plug 'rust-lang/rust.vim'
Plug 'valloric/youcompleteme'
Plug 'wakatime/vim-wakatime'


call plug#end()

  """"" Go Bindings """""
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_fmt_command = "goimports"
let g:go_fmt_autosave = 1

let g:go_term_enabled = 1
let g:go_list_type = "quickfix"

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_w = 1
let g:syntastic_check_autosave = 1
let g:syntastic_go_checkers = ["gofmt", "govet", "golint", "errcheck", "deadcode", "gometalinter"]
let g:syntastic_style_error_symbol=">>"
let g:syntastic_style_warning_symbol=">>"
let g:go_highlight_build_constraints = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_structs = 1
let g:go_highlight_types = 1
highlight SyntasticError ctermbg=231
highlight SyntasticWarningLine ctermbg=130

"python-mode
let g:pymode_python = 'python3'

" NerdTree
nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

" Start NERDTree and put the cursor back in the other window.
autocmd vimenter * NERDTreeToggleautocmd vimenter * NERDTreeToggle
" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
" Open the existing NERDTree on each new tab.
autocmd BufWinEnter * if getcmdwintype() == '' | silent NERDTreeMirror | endif

" RUST
let g:rustfmt_autosave = 1

" Rainbow Paranetheses
 let g:rainbow_active = 1 "set to 0 if you want to enable it later via :RainbowToggle

" space vim dark
colorscheme space-vim-dark
hi Normal     ctermbg=NONE guibg=NONE
hi LineNr     ctermbg=NONE guibg=NONE
hi SignColumn ctermbg=NONE guibg=NONE

